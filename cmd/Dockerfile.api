ARG SOURCE=build

#####
##### Build the API from source
FROM golang:latest AS build

RUN apt-get update && apt-get install protobuf-compiler -y
RUN go get -u github.com/golang/protobuf/protoc-gen-go

ENV GO111MODULE=on

ARG project_path="$(go env GOPATH)/src/github.com/carsonmyers/bublar-assignment"
RUN mkdir -p ${project_path}
WORKDIR ${project_path}

COPY go.mod .
COPY go.sum .

RUN go mod download

COPY . .

RUN protoc --go_out=plugins=grpc:. proto/*.proto
RUN CGO_ENABLED=0 go build -ldflags '-extldflags "-static"' -o /api ./cmd/api

#####
##### Create a dev container with a convenient default environment
FROM alpine:latest AS dev
COPY --from=build /api /usr/local/bin/api

RUN apk update && apk add ca-certificates

ENV LOG_LEVEL=info \
    LOCATIONS_HOST=locations LOCATIONS_PORT=49800 \
    PLAYERS_HOST=players PLAYERS_PORT=49801 \
    API_HOST=0.0.0.0 API_PORT=62880 API_PROTOCOL=http API_ENABLEADMIN=false

EXPOSE 62880

CMD ["api"]

#####
##### Create a barebones prod container
FROM scratch AS prod
COPY ./api /api
COPY ./ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

ENV API_PORT=62880
EXPOSE 62880

CMD ["/api"]