// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/services.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Player struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Location             string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	X                    int32    `protobuf:"varint,4,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,5,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{0}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Player) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Player) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Player) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Player) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type PlayerUpdate struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Player               *Player  `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerUpdate) Reset()         { *m = PlayerUpdate{} }
func (m *PlayerUpdate) String() string { return proto.CompactTextString(m) }
func (*PlayerUpdate) ProtoMessage()    {}
func (*PlayerUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{1}
}

func (m *PlayerUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerUpdate.Unmarshal(m, b)
}
func (m *PlayerUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerUpdate.Marshal(b, m, deterministic)
}
func (m *PlayerUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerUpdate.Merge(m, src)
}
func (m *PlayerUpdate) XXX_Size() int {
	return xxx_messageInfo_PlayerUpdate.Size(m)
}
func (m *PlayerUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerUpdate proto.InternalMessageInfo

func (m *PlayerUpdate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PlayerUpdate) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

type Location struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	X                    int32    `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{2}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Location) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Location) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type LocationUpdate struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location             *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LocationUpdate) Reset()         { *m = LocationUpdate{} }
func (m *LocationUpdate) String() string { return proto.CompactTextString(m) }
func (*LocationUpdate) ProtoMessage()    {}
func (*LocationUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{3}
}

func (m *LocationUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationUpdate.Unmarshal(m, b)
}
func (m *LocationUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationUpdate.Marshal(b, m, deterministic)
}
func (m *LocationUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationUpdate.Merge(m, src)
}
func (m *LocationUpdate) XXX_Size() int {
	return xxx_messageInfo_LocationUpdate.Size(m)
}
func (m *LocationUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_LocationUpdate proto.InternalMessageInfo

func (m *LocationUpdate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LocationUpdate) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type Position struct {
	Location             string   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	X                    int32    `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{4}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Position) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Position) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type AuthResponse struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{5}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type TravelRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TravelRequest) Reset()         { *m = TravelRequest{} }
func (m *TravelRequest) String() string { return proto.CompactTextString(m) }
func (*TravelRequest) ProtoMessage()    {}
func (*TravelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{6}
}

func (m *TravelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TravelRequest.Unmarshal(m, b)
}
func (m *TravelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TravelRequest.Marshal(b, m, deterministic)
}
func (m *TravelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TravelRequest.Merge(m, src)
}
func (m *TravelRequest) XXX_Size() int {
	return xxx_messageInfo_TravelRequest.Size(m)
}
func (m *TravelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TravelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TravelRequest proto.InternalMessageInfo

func (m *TravelRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TravelRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type TravelResponse struct {
	Player               *Player   `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Position             *Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TravelResponse) Reset()         { *m = TravelResponse{} }
func (m *TravelResponse) String() string { return proto.CompactTextString(m) }
func (*TravelResponse) ProtoMessage()    {}
func (*TravelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{7}
}

func (m *TravelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TravelResponse.Unmarshal(m, b)
}
func (m *TravelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TravelResponse.Marshal(b, m, deterministic)
}
func (m *TravelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TravelResponse.Merge(m, src)
}
func (m *TravelResponse) XXX_Size() int {
	return xxx_messageInfo_TravelResponse.Size(m)
}
func (m *TravelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TravelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TravelResponse proto.InternalMessageInfo

func (m *TravelResponse) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

func (m *TravelResponse) GetPosition() *Position {
	if m != nil {
		return m.Position
	}
	return nil
}

type MoveRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	X                    int32    `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveRequest) Reset()         { *m = MoveRequest{} }
func (m *MoveRequest) String() string { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()    {}
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{8}
}

func (m *MoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveRequest.Unmarshal(m, b)
}
func (m *MoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveRequest.Marshal(b, m, deterministic)
}
func (m *MoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveRequest.Merge(m, src)
}
func (m *MoveRequest) XXX_Size() int {
	return xxx_messageInfo_MoveRequest.Size(m)
}
func (m *MoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveRequest proto.InternalMessageInfo

func (m *MoveRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *MoveRequest) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *MoveRequest) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2d444674d051dbb, []int{9}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Player)(nil), "proto.Player")
	proto.RegisterType((*PlayerUpdate)(nil), "proto.PlayerUpdate")
	proto.RegisterType((*Location)(nil), "proto.Location")
	proto.RegisterType((*LocationUpdate)(nil), "proto.LocationUpdate")
	proto.RegisterType((*Position)(nil), "proto.Position")
	proto.RegisterType((*AuthResponse)(nil), "proto.AuthResponse")
	proto.RegisterType((*TravelRequest)(nil), "proto.TravelRequest")
	proto.RegisterType((*TravelResponse)(nil), "proto.TravelResponse")
	proto.RegisterType((*MoveRequest)(nil), "proto.MoveRequest")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
}

func init() {
	proto.RegisterFile("proto/services.proto", fileDescriptor_c2d444674d051dbb)
}

var fileDescriptor_c2d444674d051dbb = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x41, 0x6f, 0xda, 0x30,
	0x14, 0xc7, 0x49, 0x80, 0x94, 0x3e, 0x28, 0x93, 0x5c, 0x2a, 0xa1, 0x9c, 0x2a, 0x4b, 0xd5, 0x98,
	0xc6, 0x02, 0x63, 0x87, 0x49, 0x3b, 0x6d, 0xdd, 0x50, 0x2f, 0xad, 0x54, 0x45, 0xdb, 0x65, 0x97,
	0x29, 0x10, 0xab, 0x8d, 0x96, 0xc4, 0x59, 0xec, 0x30, 0xf8, 0x3e, 0xfb, 0x86, 0xfb, 0x02, 0x95,
	0x63, 0x3b, 0x4d, 0x02, 0x05, 0x4e, 0xc9, 0xf3, 0xff, 0xd9, 0xef, 0xe7, 0xff, 0x3f, 0x81, 0x41,
	0x92, 0x52, 0x4e, 0x27, 0x8c, 0xa4, 0xab, 0x60, 0x49, 0x98, 0x93, 0x97, 0xa8, 0x9d, 0x3f, 0xf0,
	0x1a, 0xac, 0xfb, 0xd0, 0xdb, 0x90, 0x14, 0xd9, 0xd0, 0xc9, 0x18, 0x49, 0x63, 0x2f, 0x22, 0x43,
	0xe3, 0xd2, 0x18, 0x9d, 0xba, 0x45, 0x2d, 0xb4, 0xc4, 0x63, 0xec, 0x2f, 0x4d, 0xfd, 0xa1, 0x29,
	0x35, 0x5d, 0x0b, 0x2d, 0xa4, 0x4b, 0x8f, 0x07, 0x34, 0x1e, 0x36, 0xa5, 0xa6, 0x6b, 0xd4, 0x03,
	0x63, 0x3d, 0x6c, 0x5d, 0x1a, 0xa3, 0xb6, 0x6b, 0xac, 0x45, 0xb5, 0x19, 0xb6, 0x65, 0xb5, 0xc1,
	0x73, 0xe8, 0xc9, 0xc9, 0x3f, 0x12, 0xdf, 0xe3, 0x04, 0xf5, 0xc1, 0x0c, 0x7c, 0x35, 0xd9, 0x0c,
	0x7c, 0x74, 0x05, 0x56, 0x92, 0xeb, 0xf9, 0xc4, 0xee, 0xec, 0x4c, 0x82, 0x3b, 0x72, 0x93, 0xab,
	0x44, 0xfc, 0x09, 0x3a, 0xb7, 0x7a, 0x1c, 0x82, 0x56, 0x09, 0x3f, 0x7f, 0x97, 0x08, 0x66, 0x05,
	0xa1, 0xa9, 0x11, 0xee, 0xa0, 0xaf, 0xf7, 0xbe, 0x00, 0xf1, 0xb6, 0x74, 0x39, 0x89, 0xf1, 0x4a,
	0x61, 0xe8, 0x8d, 0xcf, 0xb7, 0xc5, 0xd7, 0xd0, 0xb9, 0xa7, 0x2c, 0xc8, 0x51, 0xca, 0xae, 0x18,
	0xbb, 0x5c, 0x79, 0x01, 0xe9, 0x33, 0xf4, 0xbe, 0x64, 0xfc, 0xd1, 0x25, 0x2c, 0xa1, 0x31, 0x23,
	0x7b, 0x53, 0x19, 0x40, 0x9b, 0xd3, 0xdf, 0x24, 0x56, 0x91, 0xc8, 0x02, 0xdf, 0xc0, 0xd9, 0xf7,
	0xd4, 0x5b, 0x91, 0xd0, 0x25, 0x7f, 0x32, 0xc2, 0xf8, 0xa1, 0x60, 0x2b, 0xf7, 0x2b, 0x61, 0x62,
	0x1f, 0xfa, 0xfa, 0x20, 0x05, 0xf3, 0x1c, 0x89, 0xb1, 0x27, 0x12, 0x61, 0x5a, 0xa2, 0x7c, 0xa8,
	0x99, 0xa6, 0xed, 0x71, 0x8b, 0x06, 0x3c, 0x87, 0xee, 0x1d, 0x5d, 0x91, 0x63, 0x60, 0xf7, 0xf9,
	0x76, 0x02, 0xed, 0x79, 0x94, 0xf0, 0xcd, 0xec, 0xbf, 0x09, 0x27, 0x92, 0x87, 0xa1, 0x11, 0x58,
	0x5f, 0x53, 0x22, 0x72, 0xad, 0x92, 0xda, 0xd5, 0x12, 0x37, 0xd0, 0x15, 0x34, 0x6f, 0x08, 0x3f,
	0xd8, 0x36, 0x86, 0x96, 0x48, 0xa7, 0xde, 0x77, 0xae, 0xca, 0x72, 0x72, 0xb8, 0x81, 0x5e, 0x43,
	0xeb, 0x36, 0x60, 0x1c, 0xf5, 0x94, 0x9c, 0x03, 0x6e, 0x1d, 0x3a, 0x35, 0x90, 0x03, 0x96, 0xfa,
	0xfe, 0xce, 0x2b, 0xa2, 0x5c, 0xdc, 0xc6, 0xf8, 0x08, 0x96, 0x4c, 0x06, 0x0d, 0x94, 0x54, 0x49,
	0xdc, 0xbe, 0xa8, 0xad, 0x16, 0x44, 0xef, 0xa0, 0x25, 0xcc, 0x46, 0x48, 0x35, 0x94, 0x9c, 0xb7,
	0xeb, 0x19, 0xe1, 0x86, 0xf0, 0xef, 0x1b, 0x09, 0xc9, 0x61, 0xff, 0x66, 0xff, 0x4c, 0x38, 0xd5,
	0x7f, 0x04, 0x43, 0xe3, 0xc2, 0xf7, 0xfa, 0xdf, 0x62, 0xd7, 0x17, 0x70, 0x03, 0xbd, 0x91, 0xde,
	0x1f, 0xd7, 0xba, 0xcb, 0xd1, 0xed, 0xc6, 0xa9, 0x81, 0xde, 0x43, 0x57, 0xb4, 0xea, 0x4f, 0x61,
	0xeb, 0xf4, 0x1d, 0x31, 0xcc, 0x8a, 0x18, 0x2e, 0x6a, 0xdd, 0x2a, 0x88, 0x1d, 0x44, 0xe3, 0xc2,
	0xa2, 0x23, 0xf8, 0xaf, 0xa7, 0x3f, 0x9d, 0x87, 0x80, 0x3f, 0x66, 0x0b, 0x67, 0x49, 0xa3, 0xc9,
	0xd2, 0x4b, 0x19, 0x8d, 0x23, 0xc1, 0x37, 0x59, 0x64, 0x8b, 0xd0, 0x4b, 0x7f, 0x79, 0x8c, 0x05,
	0x0f, 0x71, 0x44, 0x62, 0x3e, 0xc9, 0x37, 0x2f, 0xac, 0xfc, 0xf1, 0xe1, 0x29, 0x00, 0x00, 0xff,
	0xff, 0x7a, 0xa8, 0x58, 0x4f, 0xc5, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlayersClient is the client API for Players service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayersClient interface {
	Create(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Player, error)
	Get(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Player, error)
	Auth(ctx context.Context, in *Player, opts ...grpc.CallOption) (*AuthResponse, error)
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Players_ListClient, error)
	Update(ctx context.Context, in *PlayerUpdate, opts ...grpc.CallOption) (*Player, error)
	Travel(ctx context.Context, in *TravelRequest, opts ...grpc.CallOption) (*TravelResponse, error)
	Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*Position, error)
	Delete(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Player, error)
}

type playersClient struct {
	cc grpc.ClientConnInterface
}

func NewPlayersClient(cc grpc.ClientConnInterface) PlayersClient {
	return &playersClient{cc}
}

func (c *playersClient) Create(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Player, error) {
	out := new(Player)
	err := c.cc.Invoke(ctx, "/proto.Players/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playersClient) Get(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Player, error) {
	out := new(Player)
	err := c.cc.Invoke(ctx, "/proto.Players/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playersClient) Auth(ctx context.Context, in *Player, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/proto.Players/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playersClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Players_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Players_serviceDesc.Streams[0], "/proto.Players/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &playersListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Players_ListClient interface {
	Recv() (*Player, error)
	grpc.ClientStream
}

type playersListClient struct {
	grpc.ClientStream
}

func (x *playersListClient) Recv() (*Player, error) {
	m := new(Player)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *playersClient) Update(ctx context.Context, in *PlayerUpdate, opts ...grpc.CallOption) (*Player, error) {
	out := new(Player)
	err := c.cc.Invoke(ctx, "/proto.Players/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playersClient) Travel(ctx context.Context, in *TravelRequest, opts ...grpc.CallOption) (*TravelResponse, error) {
	out := new(TravelResponse)
	err := c.cc.Invoke(ctx, "/proto.Players/Travel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playersClient) Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*Position, error) {
	out := new(Position)
	err := c.cc.Invoke(ctx, "/proto.Players/Move", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playersClient) Delete(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Player, error) {
	out := new(Player)
	err := c.cc.Invoke(ctx, "/proto.Players/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayersServer is the server API for Players service.
type PlayersServer interface {
	Create(context.Context, *Player) (*Player, error)
	Get(context.Context, *Player) (*Player, error)
	Auth(context.Context, *Player) (*AuthResponse, error)
	List(*Empty, Players_ListServer) error
	Update(context.Context, *PlayerUpdate) (*Player, error)
	Travel(context.Context, *TravelRequest) (*TravelResponse, error)
	Move(context.Context, *MoveRequest) (*Position, error)
	Delete(context.Context, *Player) (*Player, error)
}

// UnimplementedPlayersServer can be embedded to have forward compatible implementations.
type UnimplementedPlayersServer struct {
}

func (*UnimplementedPlayersServer) Create(ctx context.Context, req *Player) (*Player, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPlayersServer) Get(ctx context.Context, req *Player) (*Player, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPlayersServer) Auth(ctx context.Context, req *Player) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Auth not implemented")
}
func (*UnimplementedPlayersServer) List(req *Empty, srv Players_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedPlayersServer) Update(ctx context.Context, req *PlayerUpdate) (*Player, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPlayersServer) Travel(ctx context.Context, req *TravelRequest) (*TravelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Travel not implemented")
}
func (*UnimplementedPlayersServer) Move(ctx context.Context, req *MoveRequest) (*Position, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Move not implemented")
}
func (*UnimplementedPlayersServer) Delete(ctx context.Context, req *Player) (*Player, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterPlayersServer(s *grpc.Server, srv PlayersServer) {
	s.RegisterService(&_Players_serviceDesc, srv)
}

func _Players_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayersServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Players/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayersServer).Create(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _Players_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Players/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayersServer).Get(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _Players_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayersServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Players/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayersServer).Auth(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _Players_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PlayersServer).List(m, &playersListServer{stream})
}

type Players_ListServer interface {
	Send(*Player) error
	grpc.ServerStream
}

type playersListServer struct {
	grpc.ServerStream
}

func (x *playersListServer) Send(m *Player) error {
	return x.ServerStream.SendMsg(m)
}

func _Players_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayersServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Players/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayersServer).Update(ctx, req.(*PlayerUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Players_Travel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TravelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayersServer).Travel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Players/Travel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayersServer).Travel(ctx, req.(*TravelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Players_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayersServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Players/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayersServer).Move(ctx, req.(*MoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Players_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayersServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Players/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayersServer).Delete(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

var _Players_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Players",
	HandlerType: (*PlayersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Players_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Players_Get_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _Players_Auth_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Players_Update_Handler,
		},
		{
			MethodName: "Travel",
			Handler:    _Players_Travel_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _Players_Move_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Players_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Players_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/services.proto",
}

// LocationsClient is the client API for Locations service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocationsClient interface {
	Create(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Location, error)
	Get(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Location, error)
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Locations_ListClient, error)
	ListPlayers(ctx context.Context, in *Location, opts ...grpc.CallOption) (Locations_ListPlayersClient, error)
	Update(ctx context.Context, in *LocationUpdate, opts ...grpc.CallOption) (*Location, error)
	Delete(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Location, error)
}

type locationsClient struct {
	cc grpc.ClientConnInterface
}

func NewLocationsClient(cc grpc.ClientConnInterface) LocationsClient {
	return &locationsClient{cc}
}

func (c *locationsClient) Create(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Location, error) {
	out := new(Location)
	err := c.cc.Invoke(ctx, "/proto.Locations/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationsClient) Get(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Location, error) {
	out := new(Location)
	err := c.cc.Invoke(ctx, "/proto.Locations/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationsClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Locations_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Locations_serviceDesc.Streams[0], "/proto.Locations/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &locationsListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Locations_ListClient interface {
	Recv() (*Location, error)
	grpc.ClientStream
}

type locationsListClient struct {
	grpc.ClientStream
}

func (x *locationsListClient) Recv() (*Location, error) {
	m := new(Location)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *locationsClient) ListPlayers(ctx context.Context, in *Location, opts ...grpc.CallOption) (Locations_ListPlayersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Locations_serviceDesc.Streams[1], "/proto.Locations/ListPlayers", opts...)
	if err != nil {
		return nil, err
	}
	x := &locationsListPlayersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Locations_ListPlayersClient interface {
	Recv() (*Player, error)
	grpc.ClientStream
}

type locationsListPlayersClient struct {
	grpc.ClientStream
}

func (x *locationsListPlayersClient) Recv() (*Player, error) {
	m := new(Player)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *locationsClient) Update(ctx context.Context, in *LocationUpdate, opts ...grpc.CallOption) (*Location, error) {
	out := new(Location)
	err := c.cc.Invoke(ctx, "/proto.Locations/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationsClient) Delete(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Location, error) {
	out := new(Location)
	err := c.cc.Invoke(ctx, "/proto.Locations/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LocationsServer is the server API for Locations service.
type LocationsServer interface {
	Create(context.Context, *Location) (*Location, error)
	Get(context.Context, *Location) (*Location, error)
	List(*Empty, Locations_ListServer) error
	ListPlayers(*Location, Locations_ListPlayersServer) error
	Update(context.Context, *LocationUpdate) (*Location, error)
	Delete(context.Context, *Location) (*Location, error)
}

// UnimplementedLocationsServer can be embedded to have forward compatible implementations.
type UnimplementedLocationsServer struct {
}

func (*UnimplementedLocationsServer) Create(ctx context.Context, req *Location) (*Location, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedLocationsServer) Get(ctx context.Context, req *Location) (*Location, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedLocationsServer) List(req *Empty, srv Locations_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedLocationsServer) ListPlayers(req *Location, srv Locations_ListPlayersServer) error {
	return status.Errorf(codes.Unimplemented, "method ListPlayers not implemented")
}
func (*UnimplementedLocationsServer) Update(ctx context.Context, req *LocationUpdate) (*Location, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedLocationsServer) Delete(ctx context.Context, req *Location) (*Location, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterLocationsServer(s *grpc.Server, srv LocationsServer) {
	s.RegisterService(&_Locations_serviceDesc, srv)
}

func _Locations_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Location)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Locations/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationsServer).Create(ctx, req.(*Location))
	}
	return interceptor(ctx, in, info, handler)
}

func _Locations_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Location)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Locations/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationsServer).Get(ctx, req.(*Location))
	}
	return interceptor(ctx, in, info, handler)
}

func _Locations_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LocationsServer).List(m, &locationsListServer{stream})
}

type Locations_ListServer interface {
	Send(*Location) error
	grpc.ServerStream
}

type locationsListServer struct {
	grpc.ServerStream
}

func (x *locationsListServer) Send(m *Location) error {
	return x.ServerStream.SendMsg(m)
}

func _Locations_ListPlayers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Location)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LocationsServer).ListPlayers(m, &locationsListPlayersServer{stream})
}

type Locations_ListPlayersServer interface {
	Send(*Player) error
	grpc.ServerStream
}

type locationsListPlayersServer struct {
	grpc.ServerStream
}

func (x *locationsListPlayersServer) Send(m *Player) error {
	return x.ServerStream.SendMsg(m)
}

func _Locations_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocationUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Locations/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationsServer).Update(ctx, req.(*LocationUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Locations_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Location)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Locations/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationsServer).Delete(ctx, req.(*Location))
	}
	return interceptor(ctx, in, info, handler)
}

var _Locations_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Locations",
	HandlerType: (*LocationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Locations_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Locations_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Locations_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Locations_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Locations_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListPlayers",
			Handler:       _Locations_ListPlayers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/services.proto",
}
